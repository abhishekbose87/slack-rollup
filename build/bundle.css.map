{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Component.svelte",
    "../../App.svelte",
    "../../Message.svelte"
  ],
  "sourcesContent": [
    "<script>\n\texport let checked = false\n\texport let onLabel = null\n  export let offLabel = null\n  export let disabled = false\n  \n  export let css = {\n    fontSize: '1rem',\n    align: 'left',\n    checkedColor: '#bbe572'\n  }\n</script>\n\n<div class=\"toggle\" class:disabled style=\"font-size: {css.fontSize}; text-align: {css.align};\">\n   <div class=\"controls\">\n    <div class=\"toggle\">\n      <label class=\"toggle-label\">\n      \t<input class=\"toggle-input\" type=\"checkbox\" bind:checked on:change {disabled}>\n        <span class=\"toggle-track\" style={checked ? `background-color: ${css.checkedColor};` : \"\"}>\n          <span class=\"toggle-switch\"></span>\n        </span>\n        {#if onLabel && offLabel}\n        <span class=\"toggle-title\">{checked ? onLabel : offLabel}</span>\n        {/if}\n      </label>\n    </div>\n   </div>\n</div>\n\n<style>\n  .toggle.disabled {\n    pointer-events: none;\n  }\n\n\t.toggle + .toggle {\n\t\tmargin-top: 1.25em;\n\t\tpadding-top: 1em;\n\t\tborder-top: 1px solid #ddd;\n\t}\n\n\t.toggle {\n\t\tposition: relative;\n\t}\n\n\t.toggle-input {\n\t\tborder: 0;\n    clip: rect(0 0 0 0);\n    height: auto;\n    margin: 0;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n    white-space: nowrap;\n\t}\n\n\t.toggle-label {\n\t\tcursor: pointer;\n\t\tposition: relative;\n\t}\n\n\t.toggle-label, .toggle-title, .toggle-track, .toggle-switch {\n\t\tdisplay: inline-block;\n\t\tvertical-align: middle;\n\t}\n\n\t.toggle-title + .toggle-track {\n\t\tmargin-left: 0.375em;\n\t}\n\n\t.toggle-track {\n\t\tposition: relative;\n\t\ttop: -0.125em;\n\t\twidth: 2.8125em;\n\t\theight: 1.875em;\n\t\tbackground-color: #eee;\n\t\tborder: 0.0625em solid rgba(0, 0, 0, 0.15);\n\t\tborder-radius: 5px;\n\t\ttransition: 0.35s cubic-bezier(0.785, 0.135, 0.15, 0.86);\n\t\ttransition-property: background-color, border-color;\n\t}\n\n\t.toggle-label .toggle-input:checked ~ .toggle-track {\n\t\tborder-color: rgba(0, 0, 0, 0.05);\n\t}\n\n\t.toggle-track + .toggle-title {\n\t\tmargin-left: 0.375em;\n\t}\n\n\t.toggle-switch {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0.9375em;\n\t\tbottom: 0;\n\t\tleft: 0;\n    margin: 2px;\n\t\tbackground-color: white;\n\t\tborder-radius: 5px;\n\t\tbox-shadow: 1px 1px 6px rgba(0, 0, 0, 0.2), inset 1px 1px 3px rgba(255, 255, 255, 0.8);\n\t\ttransition: 0.35s cubic-bezier(0.785, 0.135, 0.15, 0.86);\n\t\ttransition-property: left, right;\n\t\ttransition-delay: 0s, 0.05s;\n\t}\n\n\t.toggle-label:active .toggle-switch {\n\t\tbox-shadow: 1px 1px 6px rgba(0, 0, 0, 0.2), inset 1px 1px 3px rgba(255, 255, 255, 0.8), inset 1px 1px 6px rgba(0, 0, 0, 0.1);\n\t}\n\n\t.toggle-label .toggle-input:checked ~ .toggle-track > .toggle-switch {\n\t\tright: 0;\n\t\tleft: 0.9375em;\n\t\ttransition: 0.35s cubic-bezier(0.785, 0.135, 0.15, 0.86);\n\t\ttransition-property: left, right;\n\t\ttransition-delay: 0.05s, 0s;\n\t}\n</style>",
    "<script>\n  import Message from \"./Message.svelte\";\n\n  let resultPromise;\n  var jszip = new JSZip();\n  let messages = [];\n  let allMessages = [];\n  let sortBy = \"replies\";\n  let channel = \"all\";\n  function onUpload(event) {\n    let files = event.target.files;\n    if (files && files[0] && files[0].type === \"application/zip\") {\n      resultPromise = analyzeSlackDump(files[0]).then(result => {\n        allMessages = result.messages;\n        filterAndSort();\n        return result;\n      });\n    }\n  }\n\n  function onSort(event) {\n    sortBy = event.target.value;\n    filterAndSort();\n  }\n\n  function onChannelSelect(event) {\n    channel = event.target.value;\n    filterAndSort();\n  }\n\n  function filterAndSort() {\n    messages = allMessages\n      .filter(message => {\n        if (channel == \"all\") {\n          return true;\n        }\n        return message.channel === channel;\n      })\n      .sort((b, a) => {\n        if (sortBy === \"reactions\") {\n          return a.reactionCount - b.reactionCount;\n        }\n        return a.replyCount - b.replyCount;\n      });\n  }\n\n  async function analyzeSlackDump(file) {\n    const extracted = await jszip.loadAsync(file);\n    var processedFiles = [];\n    for (let [key, value] of Object.entries(extracted.files)) {\n      if (\n        value.dir === false &&\n        key.endsWith(\".json\") &&\n        key.startsWith(\"__\") === false // Exclude system files\n      ) {\n        const jsonValue = JSON.parse(await value.async(\"string\"));\n        processedFiles.push({ key: key, value: jsonValue });\n      }\n    }\n    const rootPath = processedFiles[0].key.split(\"/\")[0];\n    const users = processedFiles\n      .find(entry => entry.key === `${rootPath}/users.json`)\n      .value.reduce(function(map, obj) {\n        map[obj.id] = obj.name;\n        return map;\n      }, {});\n\n    const messages = analyzeMessages(processedFiles);\n    const channels = [...new Set(messages.map(elem => elem.channel))];\n    return { users, channels, messages };\n  }\n\n  function analyzeMessages(processedFiles) {\n    var messages = [];\n    processedFiles.forEach(element => {\n      element.value.forEach(jsonElement => {\n        if (\n          jsonElement.type === \"message\" &&\n          !jsonElement.parent_user_id && // Exclude thread messages\n          jsonElement.user &&\n          jsonElement.user_profile // Exclude bot messages\n        ) {\n          try {\n            const reactionCount = (jsonElement.reactions || []).reduce(\n              (sum, obj) => {\n                return sum + obj.count || 0;\n              },\n              0\n            );\n            const replyCount = (jsonElement.replies || []).length;\n            messages.push({\n              channel: element.key.split(\"/\")[1],\n              text: jsonElement.text,\n              replies: jsonElement.replies,\n              replyCount: replyCount,\n              reactionCount: reactionCount,\n              reactions: jsonElement.reactions,\n              user: jsonElement.user_profile,\n              timestamp: jsonElement.ts,\n              blocks: jsonElement.blocks\n            });\n          } catch (err) {\n            console.error(err.message);\n          }\n        }\n      });\n    });\n    return messages;\n  }\n</script>\n\n<style>\n  main {\n    padding-top: 3em;\n  }\n  .center {\n    text-align: center;\n  }\n</style>\n\n<main>\n  <div class=\"container\">\n    <div class=\"row center\">\n      <div class=\"column\">\n        <h1>Slack Rollup</h1>\n      </div>\n    </div>\n    <div class=\"row center\">\n      <div class=\"column\">\n        <input\n          id=\"slackDumpUpload\"\n          type=\"file\"\n          accept=\".zip\"\n          on:input={onUpload} />\n      </div>\n    </div>\n\n    {#if resultPromise}\n      {#await resultPromise}\n        <p class=\"center\">Loading...</p>\n      {:then result}\n        <div class=\"row\">\n          <div class=\"column\">\n            <label for=\"channel\">Select Channel</label>\n            <select on:input={onChannelSelect} id=\"channel\">\n              <option value=\"all\" selected>All</option>\n              {#each result.channels as channel}\n                <option value={channel}>{channel}</option>\n              {/each}\n            </select>\n          </div>\n          <div class=\"column\">\n            <label for=\"sort\">Sort By</label>\n            <select on:input={onSort} id=\"sort\">\n              <option value=\"replies\" selected>Replies</option>\n              <option value=\"reactions\">Reactions</option>\n\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"column\">\n            {#each messages as message}\n              <Message {message} users={result.users} />\n            {/each}\n          </div>\n        </div>\n      {/await}\n    {/if}\n\n  </div>\n</main>\n",
    "<script>\n  import { emojis } from \"./static\";\n  import Toggle from \"@beyonk/svelte-toggle\";\n\n  let showHTML = false;\n\n  export let message;\n  export let users;\n  \n  function getDate(message) {\n    return new Date(\n      Number(message.timestamp.split(\".\")[0]) * 1000\n    ).toDateString();\n  }\n  function getFormattedText(message) {\n    if (!message.blocks || message.blocks.length === 0) {\n      return message.text;\n    }\n    const elements = message.blocks[0].elements[0].elements;\n    var text = message.text;\n    elements.forEach(element => {\n      if (element.type === \"link\") {\n        const sanitezedUrl = element.url.replace(/\\\\/g, \"\");\n        const regex = new RegExp(`<${element.url}.*>`);\n        text = text.replace(\n          regex,\n          `<a href=\"${sanitezedUrl}\">${element.text || sanitezedUrl}</a>`\n        );\n      } else if (element.type === \"user\") {\n        const regex = new RegExp(`<@${element.user_id}>`);\n        text = text.replace(\n          regex,\n          `<b>@${users[element.user_id] || \"notfound\"}</b>`\n        );\n      } else if (element.type === \"emoji\") {\n        text = text.replace(\n          `:${element.name}:`,\n          emojis[element.name] || `:${element.name}:`\n        );\n      } else if (\n        element.type === \"text\" &&\n        element.style &&\n        element.style.bold === true\n      ) {\n        text = text.replace(`*${element.text}*`, `<b>${element.text}</b`);\n      }\n    });\n    return text;\n  }\n\n  function getReactionsHTML(message) {\n    if (message.reactions) {\n      return message.reactions.reduce((html, reaction) => {\n        return (\n          html +\n          `<span style=\"font-size:1rem;margin-right:0.8em;\">${emojis[\n            reaction.name\n          ] || `:${reaction.name}:`} ${reaction.count}</span>`\n        );\n      }, \"\");\n    }\n    return \"\";\n  }\n\n  function getCode(message) {\n    return `<div style=\"padding:1em;box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\"><div style=\"display:flex;flex-direction:row;\"><img style=\"width:48px;height:48px;margin-right:1em;border-radius: 50%;\" src=\"${\n      message.user.image_72\n    }\"/><div style=\"display:flex;flex-direction:column;align-items:flex-start;\"><b>${\n      message.user.real_name\n    }</b><span style=\"font-size:1rem;\">${getDate(message)} in #${\n      message.channel\n    }</span></div></div><div style=\"overflow-wrap:break-word;margin-bottom:1em;\">${getFormattedText(\n      message\n    )}</div><div style=\"display:flex;flex-direction:row;\">${\n      message.replies\n        ? `<span style=\"font-size:1rem;margin-right:0.8em;\">💬 Replies: ${message.replies.length}</span>`\n        : \"\"\n    }${getReactionsHTML(message)}</div></div>`;\n  }\n</script>\n\n<style>\n  .card {\n    padding: 1em;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  }\n  .header {\n    display: flex;\n    flex-direction: row;\n  }\n  .profile-image {\n    width: 48px;\n    height: 48px;\n    margin-right: 1em;\n    border-radius: 50%;\n  }\n  .header-details {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  .header-details p {\n    font-size: 1.3rem;\n    font-weight: 200;\n  }\n  .message {\n    overflow-wrap: break-word;\n    margin-bottom: 1em;\n  }\n  .stats {\n    display: flex;\n    flex-direction: row;\n  }\n  .stat {\n    font-size: 1.5rem;\n    margin-right: 0.8em;\n  }\n  pre {\n    overflow-x: auto;\n    white-space: pre-wrap;\n    white-space: -moz-pre-wrap;\n    white-space: -pre-wrap;\n    white-space: -o-pre-wrap;\n    word-wrap: break-word;\n  }\n  code {\n    display: block;\n    padding: 1rem;\n    word-wrap: break-word;\n    overflow-x: auto;\n  }\n</style>\n\n<div class=\"card\">\n  <Toggle bind:checked={showHTML} onLabel=\"Hide HTML\" offLabel=\"Show HTML\" />\n  {#if showHTML}\n    <code>{getCode(message)}</code>\n  {:else}\n    <div class=\"header\">\n      <img class=\"profile-image\" src={message.user.image_72} />\n      <div class=\"header-details\">\n        <b>{message.user.real_name}</b>\n        <p>{getDate(message)} in #{message.channel}</p>\n      </div>\n    </div>\n    <div class=\"message\">\n      {@html getFormattedText(message)}\n    </div>\n    <div class=\"stats\">\n      {#if message.replies}\n        <span class=\"stat\">💬 Replies: {message.replies.length}</span>\n      {/if}\n      {#if message.reactions}\n        {#each message.reactions as reaction}\n          <span class=\"stat\">\n            {@html emojis[reaction.name] || `:${reaction.name}:`}\n            {reaction.count}\n          </span>\n        {/each}\n      {/if}\n    </div>\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}